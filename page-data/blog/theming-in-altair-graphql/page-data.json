{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/theming-in-altair-graphql/","result":{"data":{"site":{"siteMetadata":{"title":"XKoji.dev","siteUrl":"https://www.xkoji.dev"}},"markdownRemark":{"id":"0166549b-d11d-5075-be15-c31c2a61f383","excerpt":"I have been working on introducing more theming options in Altair GraphQL Client, as has been requested several times. Altair already had a few customization…","html":"<p>I have been working on introducing more theming options in <a href=\"https://altair.sirmuel.design/\" target=\"_blank\" rel=\"nofollow\">Altair GraphQL Client</a>, as has been requested several times. Altair already had a few customization options available for a while now (font size and font family), but the implementation wasn’t going to scale well for more customization options. So I decided to look for better solutions.</p>\n<h2 id=\"css-in-js\" style=\"position:relative;\">CSS-in-JS</h2>\n<p><a href=\"https://www.wikiwand.com/en/CSS-in-JS\" target=\"_blank\" rel=\"nofollow\">CSS-in-JS</a> has been a popular solution for managing component styles in the React community for a while now with several CSS-in-JS solutions existing including <a href=\"https://styled-components.com/\" target=\"_blank\" rel=\"nofollow\">styled-components</a>, <a href=\"https://emotion.sh/docs/introduction\" target=\"_blank\" rel=\"nofollow\">emotion</a>, <a href=\"https://cssinjs.org/?v=v10.4.0\" target=\"_blank\" rel=\"nofollow\">JSS</a>, and <a href=\"https://github.com/MicheleBertoli/css-in-js\" target=\"_blank\" rel=\"nofollow\">many more</a>. This also comes with the advantage of having the styles managed by JavaScript, where we can dynamically modify the styles easily.</p>\n<p>These benefits makes this a preferred solution to the theming problem. I decided to go with <strong><a href=\"https://emotion.sh/docs/introduction\" target=\"_blank\" rel=\"nofollow\">emotion</a></strong> since it is one of the popular framework agnostic libraries.</p>\n<h2 id=\"themeconfig-settings\" style=\"position:relative;\">themeConfig settings</h2>\n<p>Altair can now be customized using <code class=\"language-text\">themeConfig</code> in the settings. The interface can be found <a href=\"https://github.com/imolorhe/altair/blob/staging/packages/altair-app/src/app/services/theme/theme.ts#L32-L71\" target=\"_blank\" rel=\"nofollow\">here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    primary<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">,</span>\n    secondary<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span>\n\n    bg<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span>\n    offBg<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>lightGray<span class=\"token punctuation\">,</span>\n    font<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">,</span>\n    offFont<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>darkGray<span class=\"token punctuation\">,</span>\n    border<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>gray<span class=\"token punctuation\">,</span>\n    offBorder<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>lightGray<span class=\"token punctuation\">,</span>\n\n    headerBg<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  shadow<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    color<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">,</span>\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  editor<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    fontFamily<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'inherit'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    fontSize<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>fontSize<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n    colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      comment<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>darkGray<span class=\"token punctuation\">,</span>\n      string<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>orange<span class=\"token punctuation\">,</span>\n      number<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>orange<span class=\"token punctuation\">,</span>\n      variable<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">,</span>\n      keyword<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span>\n      atom<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">,</span>\n      attribute<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">,</span>\n      property<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span>\n      punctuation<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span>\n      definition<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>orange<span class=\"token punctuation\">,</span>\n      builtin<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>orange<span class=\"token punctuation\">,</span>\n      cursor<span class=\"token operator\">:</span> foundations<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So to change the primary color of Altair to <span style=\"color: rebeccapurple;\">rebeccapurple</span>, you can use the following in the settings:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string\">\"themeConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"colors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"primary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rebeccapurple\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://i.imgur.com/5zrqWb6.png\" alt=\"Altair in rebeccapurple\"></p>\n<p>The selected base theme is dracula, and the <code class=\"language-text\">themeConfig</code> is merged on top of the selected theme. This makes it easy t just customize parts of the theme, instead of having to customize every token.</p>\n<h2 id=\"conclusion\" style=\"position:relative;\">Conclusion</h2>\n<p>This config options should be available from v2.5.1. Now you can customize Altair to be consistent with the design style of your services for your users. The next steps after this would be the option of providing the theme customization via the plugin system.</p>","tableOfContents":"<ul>\n<li><a href=\"#css-in-js\">CSS-in-JS</a></li>\n<li><a href=\"#themeconfig-settings\">themeConfig settings</a></li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n</ul>","frontmatter":{"title":"Theming in Altair GraphQL","date":"September 18, 2020","description":"","image":null}}},"pageContext":{"slug":"/blog/theming-in-altair-graphql/","previous":{"fields":{"slug":"/blog/unit-testing-javascript-applications---part-3/"},"frontmatter":{"title":"Unit testing JavaScript Applications - Part 3 (Vue components)","draft":false}},"next":null}}}